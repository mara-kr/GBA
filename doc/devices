########### GBA DEVICES OVERVIEW #################
# TODO serial (maybe)
#
1) Controller
    REG_KEYINPUT: Key Status (R)
        [0]     : Button A (0=Pressed, 1=Released)
        [1]     : Button B ..
        [2]     : Select   ..
        [3]     : Start    ..
        [4]     : Right    ..
        [5]     : Left     ..
        [6]     : Up       ..
        [7]     : Down     ..
        [8]     : Button R ..
        [9]     : Button L ..
        [15:10] : Unused
        Recommended to read only once/frame since keys can bounce

    REG_KEYCNT: Key Interrupt Control (R/W)
        [0]     : Button A (0=Ignore, 1=Select)
        [1]     : Button B ..
        [2]     : Select   ..
        [3]     : Start    ..
        [4]     : Right    ..
        [5]     : Left     ..
        [6]     : Up       ..
        [7]     : Down     ..
        [8]     : Button R ..
        [9]     : Button L ..
        [13:10] : Unused
        [14]    : IRQ Enable Flag (0=disable, 1=enable)
                  If enabled, generate interrupts on keypress
        [15]    : IRQ Condition (0=Logical OR, 1=Logical AND)
                  Logical OR, IRQ if one of selected is pressed
                  Logical AND, IRQ if all selected are pressed



2) Timer
    4 Incrementing 16 bit timers.
    {0,1} can be used to supply samples for direct sound

    TM*CNT_L: Timer * Counter/Reload
        Reading returns current counter value
        Writing initalizes reload value, but does not affect current value
        Reload value copied to counter if:
            Timer overflows (automatically)
            Timer start bit changed from 0->1

    TM*CNT_H: Timer * Control
        [0:1]   : Prescalar select (0=F/1, 1=F/64, 2=F/256, 3=F/1024)
                  F = System clock (16.78Mhz)
        [2]     : Cascade Timing (0=normal, 1=enabled)
                  When enabled, ignore prescaler value, instead
                  increment when previous counter overflows (Illegal on Timer 0)
                  E.G Set on timer 2, will increment when timer 1 overflows
        [5:3]   : Unused
        [6]     : Timer IRQ Enable (0=Disable, 1=IRQ on timer overflow)
        [7]     : Timer Start/Stop (0=Stop, 1=Operate)
        [15:8]  : Unused



3) Interrupt Control
    The ARM7TDMI only has one IRQ line, the GBA has 14 possible interrupts
    Upon interrupt execution (any interrupt), the CPU switches to IRQ mode,
    and a physical interrupt vector is called (0x00000018), which calls a
    user handler (0x03007FFC). 0x03007F00-0x03007F9F is used for INT stack


    IME: Interrupt Master Enable Register
        [0]:     Disable all interrupts (0=disable all, 1=use IE register)
        [31:1]:  Unused

    IE: Interrupt Enable Register (0=Disable, 1=Enable)
        [0]:     LCD V-Blank
        [1]:     LCD H-Blank
        [2]:     LCD V-Counter Match
        [3]:     Timer 0 Overflow
        [4]:     Timer 1 Overflow
        [5]:     Timer 2 Overflow
        [6]:     Timer 3 Overflow
        [7]:     Serial Communication
        [8]:     DMA 0
        [9]:     DMA 1
        [10]:    DMA 2
        [11]:    DMA 3
        [12]:    Keypad
        [13]:    GamePak (external IRQ source)
        [15:14]: Unused

    IF: Interrupt Request Flags / IRQ Acknowledge (1=Request Interrupt)
        [0]:     LCD V-Blank
        [1]:     LCD H-Blank
        [2]:     LCD V-Counter Match
        [3]:     Timer 0 Overflow
        [4]:     Timer 1 Overflow
        [5]:     Timer 2 Overflow
        [6]:     Timer 3 Overflow
        [7]:     Serial Communication
        [8]:     DMA 0
        [9]:     DMA 1
        [10]:    DMA 2
        [11]:    DMA 3
        [12]:    Keypad
        [13]:    GamePak (external IRQ source)
        [15:14]: Unused

        Interrupts are acknowledged by writing 1 to one of the IRQ bits,
        the IRQ bit will then be cleared
